def crear_tablero():
    return [[" " for _ in range(3)] for _ in range(3)]

def mostrar_tablero(tablero):
    print("\n")
    for fila in tablero:
        print(" | ".join(fila))
        print("-" * 5)
    print("\n")

def verificar_victoria(tablero, jugador):
    # Comprobar filas y columnas
    for i in range(3):
        if all([celda == jugador for celda in tablero[i]]) or all([tablero[j][i] == jugador for j in range(3)]):
            return True
    # Comprobar diagonales
    if all([tablero[i][i] == jugador for i in range(3)]) or all([tablero[i][2 - i] == jugador for i in range(3)]):
        return True
    return False

def tablero_lleno(tablero):
    return all([celda != " " for fila in tablero for celda in fila])

def jugar():
    tablero = crear_tablero()
    jugador_actual = "X"

    while True:
        mostrar_tablero(tablero)
        print(f"Turno del jugador {jugador_actual}")
        try:
            fila = int(input("Fila (0-2): "))
            columna = int(input("Columna (0-2): "))
        except ValueError:
            print("Entrada inválida. Intenta nuevamente.")
            continue

        if fila not in range(3) or columna not in range(3):
            print("Coordenadas fuera de rango.")
            continue

        if tablero[fila][columna] != " ":
            print("Esa casilla ya está ocupada.")
            continue

        tablero[fila][columna] = jugador_actual

        if verificar_victoria(tablero, jugador_actual):
            mostrar_tablero(tablero)
            print(f"¡Jugador {jugador_actual} ha ganado!")
            break

        if tablero_lleno(tablero):
            mostrar_tablero(tablero)
            print("¡Empate!")
            break

        jugador_actual = "O" if jugador_actual == "X" else "X"

if __name__ == "__main__":
    jugar()
